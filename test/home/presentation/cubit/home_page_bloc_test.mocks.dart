// Mocks generated by Mockito 5.1.0 from annotations
// in flutter_architecture/test/home/presentation/cubit/home_page_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter_architecture/data/setting/models/request/get_setting_request.dart'
    as _i6;
import 'package:flutter_architecture/data/setting/models/response/get_setting_response.dart'
    as _i3;
import 'package:flutter_architecture/data/setting/repositories/setting_repository.dart'
    as _i2;
import 'package:flutter_architecture/domain/home_page/use_cases/home_page_usecases.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSettingRepository_0 extends _i1.Fake
    implements _i2.SettingRepository {}

class _FakeGetSettingResponse_1 extends _i1.Fake
    implements _i3.GetSettingResponse {}

/// A class which mocks [HomepageUseCases].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomepageUseCases extends _i1.Mock implements _i4.HomepageUseCases {
  MockHomepageUseCases() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingRepository get settingRepo =>
      (super.noSuchMethod(Invocation.getter(#settingRepo),
          returnValue: _FakeSettingRepository_0()) as _i2.SettingRepository);
  @override
  _i5.FutureOr<_i3.GetSettingResponse> getSetting(
          _i6.GetSettingRequest? request) =>
      (super.noSuchMethod(Invocation.method(#getSetting, [request]),
              returnValue: Future<_i3.GetSettingResponse>.value(
                  _FakeGetSettingResponse_1()))
          as _i5.FutureOr<_i3.GetSettingResponse>);
}
